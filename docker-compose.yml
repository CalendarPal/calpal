version: "3.8"
services:
  reverse-proxy:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      # HTTP Port
      - "80:80"
      # Web UI
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  postgres-account:
    image: "postgres:alpine"
    environment:
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - "pgdata_account:/var/lib/postgresql/data"
    command: ["postgres", "-c", "log_statement=all"]
  redis-account:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
  account:
    build:
      context: ./account
      target: builder
    image: account
    env_file: ./account/.env.dev
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`calpal.test`) && PathPrefix(`/api/account`)"
    environment:
      - ENV=dev
    volumes:
      - ./account:/go/src/app
    depends_on:
      - postgres-account
      - redis-account
      - reverse-proxy
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"
  account-client:
    build:
      context: ./account-client
    image: account-client
    expose:
      - "3000"
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account-client.rule=Host(`calpal.test`) && PathPrefix(`/account`)"
    volumes:
      - ./account-client:/app
      - /app/node_modules
    depends_on:
      - reverse-proxy
volumes:
  pgdata_account:
  redisdata:
